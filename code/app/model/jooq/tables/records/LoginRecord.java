/*
 * This file is generated by jOOQ.
*/
package model.jooq.tables.records;


import java.util.UUID;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import model.jooq.tables.Login;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LoginRecord extends UpdatableRecordImpl<LoginRecord> implements Record6<Long, String, String, UUID, Boolean, Long> {

    private static final long serialVersionUID = -1702775070;

    /**
     * Setter for <code>crm.login.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>crm.login.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>crm.login.username</code>.
     */
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>crm.login.username</code>.
     */
    @NotNull
    @Size(max = 50)
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>crm.login.password</code>.
     */
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>crm.login.password</code>.
     */
    @NotNull
    @Size(max = 100)
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>crm.login.password_salt</code>.
     */
    public void setPasswordSalt(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>crm.login.password_salt</code>.
     */
    @NotNull
    public UUID getPasswordSalt() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>crm.login.active</code>.
     */
    public void setActive(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>crm.login.active</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>crm.login.user_id</code>.
     */
    public void setUserId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>crm.login.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, String, UUID, Boolean, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, String, UUID, Boolean, Long> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Login.LOGIN.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Login.LOGIN.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Login.LOGIN.PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field4() {
        return Login.LOGIN.PASSWORD_SALT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field5() {
        return Login.LOGIN.ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return Login.LOGIN.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID component4() {
        return getPasswordSalt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component5() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component6() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value4() {
        return getPasswordSalt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value5() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LoginRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LoginRecord value2(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LoginRecord value3(String value) {
        setPassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LoginRecord value4(UUID value) {
        setPasswordSalt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LoginRecord value5(Boolean value) {
        setActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LoginRecord value6(Long value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LoginRecord values(Long value1, String value2, String value3, UUID value4, Boolean value5, Long value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LoginRecord
     */
    public LoginRecord() {
        super(Login.LOGIN);
    }

    /**
     * Create a detached, initialised LoginRecord
     */
    public LoginRecord(Long id, String username, String password, UUID passwordSalt, Boolean active, Long userId) {
        super(Login.LOGIN);

        set(0, id);
        set(1, username);
        set(2, password);
        set(3, passwordSalt);
        set(4, active);
        set(5, userId);
    }
}
