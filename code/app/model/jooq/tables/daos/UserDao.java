/*
 * This file is generated by jOOQ.
*/
package model.jooq.tables.daos;


import model.jooq.tables.User;
import model.jooq.tables.records.UserRecord;

import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDao extends DAOImpl<UserRecord, model.pojos.User, Long> {

    /**
     * Create a new UserDao without any configuration
     */
    public UserDao() {
        super(User.USER, model.pojos.User.class);
    }

    /**
     * Create a new UserDao with an attached configuration
     */
    public UserDao(Configuration configuration) {
        super(User.USER, model.pojos.User.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(model.pojos.User object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<model.pojos.User> fetchById(Long... values) {
        return fetch(User.USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public model.pojos.User fetchOneById(Long value) {
        return fetchOne(User.USER.ID, value);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<model.pojos.User> fetchByUuid(UUID... values) {
        return fetch(User.USER.UUID, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<model.pojos.User> fetchByName(String... values) {
        return fetch(User.USER.NAME, values);
    }

    /**
     * Fetch records that have <code>surname IN (values)</code>
     */
    public List<model.pojos.User> fetchBySurname(String... values) {
        return fetch(User.USER.SURNAME, values);
    }

    /**
     * Fetch records that have <code>active IN (values)</code>
     */
    public List<model.pojos.User> fetchByActive(Boolean... values) {
        return fetch(User.USER.ACTIVE, values);
    }
}
