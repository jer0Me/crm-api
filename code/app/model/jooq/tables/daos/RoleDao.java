/*
 * This file is generated by jOOQ.
*/
package model.jooq.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import model.jooq.tables.Role;
import model.jooq.tables.records.RoleRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleDao extends DAOImpl<RoleRecord, model.pojos.Role, Integer> {

    /**
     * Create a new RoleDao without any configuration
     */
    public RoleDao() {
        super(Role.ROLE, model.pojos.Role.class);
    }

    /**
     * Create a new RoleDao with an attached configuration
     */
    public RoleDao(Configuration configuration) {
        super(Role.ROLE, model.pojos.Role.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(model.pojos.Role object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<model.pojos.Role> fetchById(Integer... values) {
        return fetch(Role.ROLE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public model.pojos.Role fetchOneById(Integer value) {
        return fetchOne(Role.ROLE.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<model.pojos.Role> fetchByName(String... values) {
        return fetch(Role.ROLE.NAME, values);
    }
}
